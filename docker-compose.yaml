

x-db-variables: &db-variables
  POSTGRES_HOST: $POSTGRES_HOST
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_DATABASE: $POSTGRES_DATABASE
  POSTGRES_SSL: $POSTGRES_SSL
  COSMOS_DB_HOST: $COSMOS_DB_HOST
  COSMOS_DB_PORT: $COSMOS_DB_PORT
  COSMOS_DB_PRIMARY_KEY: $COSMOS_DB_PRIMARY_KEY
  COSMOS_DB_NAME: $COSMOS_DB_NAME

x-env-variables: &env-variables
  <<: *db-variables
  ALLOWED_ORIGINS: $ALLOWED_ORIGINS

networks:
  local:

services:

  cosmos:
    container_name: cosmos
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator
    tty: true
    restart: always
    mem_limit: 3G
    cpu_count: 4
    environment:
      - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=5
      - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
    ports:
      - ${COSMOS_DB_PORT}:${COSMOS_DB_PORT}
      - 10250-10255:10250-10255
    hostname: cosmos
    networks:
      local:
        aliases:
          - cosmos
    entrypoint: /bin/bash -c 
    command: 
       - |
          apt-get update -y && apt-get install -y curl
          /usr/local/bin/cosmos/start.sh

  postgres:
    image: postgres:15.3-alpine
    restart: always
    environment:
      <<: *db-variables
    hostname: postgres
    networks:
      local:
        aliases:
          - postgres
    ports:
      - 5432:5432
    volumes: 
      - ./postgres:/var/lib/postgresql/data

  dev: 
    build: 
      context: .
      dockerfile: ./Dockerfile.dev
    environment:
      <<: *env-variables
      PORT: 8000
    networks:
      local:
    ports:
      - 8000:8000
    volumes:
      - ./pkg:/app/pkg

  release:
    build: 
      context: .
      dockerfile: ./Dockerfile
    environment:
      <<: *env-variables
      PORT: 80
    networks:
      local:
    ports:
      - 80:80

volumes:
  postgres:
    driver: local
  cosmos:
    driver: local